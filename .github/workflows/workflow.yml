#This is an optional tag. This will be the workflow name appearing on the Actions tab of your git repo
name: Demo Workflow

#Specifies the trigger for this workflow. This workflow will be triggered on push event, 
#that is every time someone pushes a change to the repository or merges a pull request. 
#This is triggered by a push to every branch; for examples of syntax that runs only on 
#pushes to specific branches, paths, or tags, see "Workflow syntax for GitHub Actions."
on: [push]


       

#Groups together all the jobs that run in the Demo Workflow workflow.
jobs:
  #Defines a job named build. The child keys will define properties of the job.
  build:
    #Configures the job to run on the latest version of an Ubuntu Linux runner.
    runs-on: ubuntu-latest
    services:
      mysql:
          image: mysql:latest
          env:
              MYSQL_ALLOW_EMPTY_PASSWORD: yes
              MYSQL_DATABASE: ${{env.MYSQL_DATABASE}}
              MYSQL_ROOT_PASSWORD: ${{env.MYSQL_PASSWORD}}
    #       #     # MYSQL_DATABASE: laravel_tags
          ports:
              - 3306
          #env:
                
    #           MYSQL_USER: ${{env.MYSQL_USER}}
    #           MYSQL_PASSWORD: ${{env.MYSQL_PASSWORD}}
                

    #       options:  --health-cmd="mysqladmin ping\" --health-interval=10s --health-timeout=5s --health-retries=3


    #Groups together all the steps that run in the check-bats-version job. 
    #Each item nested under this section is a separate action or shell script.
    steps:
      #The uses keyword specifies that this step will run v3 of the actions/checkout action. 
      #This is an action that checks out your repository onto the runner, 
      #allowing you to run scripts or other actions against your code (such as build and test tools). 
      #You should use the checkout action any time your workflow will run against the repository's code.
      - uses: actions/checkout@v3
      - name: Set up Python 3.X
        #This step uses the actions/setup-python@v4 action to install the 
        #specified version of the python (this example uses v3.x which is the latest minor version in 3.x series). 
        #This puts both the python commands in your PATH.
        uses: actions/setup-python@v4
        with:
          python-version: '3.X'

      - name: Install dependencies
        #The run keyword tells the job to execute a command on the runner.
        #installs pip and flake 8 also if requirements.txt is present then installs all the dependencies specified there
        run: |
        
          pip3 install Flask-Testing
          pip3 install Flask-SQLAlchemy
          pip3 install flask-cors  
          pip3 install mysql-connector-python
          pip3 install python-dotenv
          pip install -r requirements.txt
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Test with unittest
        #runs the unittest
        run: |
          #TODO: Add the command to run all the unittest here.
          python unit_test.py
        

      # - name: Test Integration tests
      #   #runs the integration test
      #   run: |
      #     #TODO: Add the command to run all the integration test here.
      #     python integration_test.py    
      #   env:
      #     DB_PORT: ${{ job.services.mysql.ports[3306] }}
